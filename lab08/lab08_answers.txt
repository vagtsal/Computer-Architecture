Ερώτηση 1
  Ποιά είναι η ακολουθία διευθύνσεων που παράγει ο επεξεργαστής;
	
O επεξεργαστής παράγει τις διευθύνσεις μνήμης από 0x10010000 ως και 0x1001007c (0x10010000, 0x10010004, 0x10010008, ... , 0x1001007c).


Ερώτηση 2
  Ποιό είναι το μοτίβο των διευθύνσεων;

Αυξάνουν σειριακά κατά 4.


Ερώτηση 3
  Ποιό είναι το μοτίβο των προσπελάσεων σε θέσεις της κρυφής μνήμης;

Προσπελαύνονται από αυτή με την μικρότερη διεύθυνση προς αυτήν με την μεγαλύτερη. Αν η τρέχουσα θέση ειναι occupied διαβάζει την επόμενη. Αν δεν βρει την επιθυμητή ως την τελευταία παράγει miss.


Ερώτηση 4
  Ποιό είναι το ποσοστό ευστοχίας (hit rate) του προγράμματος;

Είναι 50%. Κάθε lw instruction παράγει misses και κάθε sw που ακολουθεί παράγει hits.


Ερώτηση 5
  Αλλάζοντας μόνο τον αριθμό γραμμών (cache blocks) της κρυφής μνήμης, μπορεί το ίδιο ακριβώς πρόγραμμα να έχει μεγαλύτερο ποσοστό ευστοχιών από αυτό που βλέπετε; Γιατί;

Όχι. Το πρόγραμμα προσπελαύνει σε όλη του την διάρκεια διαφορετική διεύθυνση μνήμης η οποία δεν βρίσκεται στην cache. Όταν η sw ακολουθει, η προηγούμενη διεύθυνση υπάρχει πάντα. Οπότε και το ποσοστό επιτυχίας θα είναι πάντα 50%.


Ερώτηση 6
  Σε τί οφείλεται το μεγαλύτερο ποσοστό ευστοχίας;

Στη δεύτερη επανάληψη όλες οι διευθυνσεις του array υπάρχουν στην cache. Οπότε έχουμε συνεχώς hits (και για την lw και για την sw) και το ποσοστό ευστοχίας ανεβαίνει στο 75%.


Ερώτηση 7
  Αυξήστε περισσότερο των αριθμό των επαναλήψεων.  Γιατί το ποσοστό ευστοχίας αυξάνεται με τον αριθμό επαναλήψεων;

Μετά την πρώτη επανάληψη όλες οι διευθυνσεις του array υπάρχουν στην cache. Οπότε μετά την πρώτη επανάληψη έχουμε συνεχώς hits.


Ερώτηση 8
  Αν αυξάνατε τον αριθμό γραμμών κρυφής μνήμης σε περισσότερες από 32, κρατώντας όλες τις υπόλοιπες παραμέτρους (μνήμης και προγράμματος), θα πετυχαίνατε μεγαλύτερο ποσοστό ευστοχίας; Εξηγείστε γιατί.

Όχι. Το μέγεθος του array είναι όσο το μέγεθος της cache. Μετά την πρώτη επανάληψη όλες οι διευθυνσεις του array υπάρχουν ήδη στην cache. Οπότε αύξηση της cache δεν θα προσφέρει τίποτα περισσότερο στο ποσοστό ευστοχίας.


Ερώτηση 9
  Σε τί οφείλεται η μείωση του ποσοστού ευστοχίας; Η απάντηση θα πρέπει να αναφέρεται και σε ιδιότητες του προγράμματος και της κρυφής μνήμης.

To array διαβάζεται σειριακά από το πρόγραμμα. Η cache μπορεί να αποθηκεύσει μόνο το μισό array. Οπότε εγγραφονται οι πρώτες 16 διευθύνσεις και στην συνέχεια σβήνονται με την σειρά για να εγγραφούν οι επόμενες 16 (η 0 αντικαθιστά την 15, η 1 την 16, η 15 την 31 κτλ), οπότε όταν το πρόγραμμα προχωρά στην επόμενη επανάληψη και ζητά την διεύθυνση 0 η cache έχει τις διευθύνσεις 15-31. Όταν θα ζητήσει την διεύθυνση 16, η cache θα έχει τις διευθύνσεις 0-15. Ποτέ δεν θα βρει κάποια lw την σωστή διευθυνση, αλλά πάντα θα την βρίσκει η sw που θα ακολουθεί, όπως ακριβώς συμβαίνει στις πρώτες ερωτήσεις. Άρα και το ποσοστό ευστοχίας θα είναι πάντα 50%.


Ερώτηση 10
  Αν ο αριθμός γραμμών της κρυφής μνήμης γινόταν 1, ποιό θα ήταν το ποσοστό ευστοχίας; Εξηγήστε τη σχέση των ποσοστών ευστοχίας σε αυτές τις δύο περιπτώσεις (ερωτήσεις 9, 10).

Όπως και στην προηγούμενη περίπτωση οι διευθύνσεις που ζητάει η lw δεν θα υπήρχαν ποτέ στην cache, θα υπήρχαν πάντα οι προηγούμενες, αλλά θα υπήρχαν πάντα οι τρέχουσες που ζητάει η sw. Οπότε το ποσοστό επιτυχίας θα ήταν πάλι 50%.


Ερώτηση 11
  Γιατί έγινε τόσο υψηλό παρόλο που ο αποθηκευτικός χώρος της κρυφής μνήμης δεν άλλαξε;

Αφού πλέον κάθε γραμμή έχει 4 λέξεις, όταν συμβαίνει κάποιο miss φορτώνεται στην cache εκτός από την τρέχουσα λέξη και οι επόμενες 3. Αφού το πρόγραμμα διαβάζει σειριακά το array τα επόμενα 3 lw instructions θα βρούν την διεύθυνση που απαιτουν. Το επόμενο miss θα προκύπτει κάθε 4η lw. Οπότε αυξάνεται το ποσοστό ευστοχίας.


Ερώτηση 12
  Αν αλλάζατε τον αριθμό επαναλήψεων στο 1, θα άλλαζε το ποσοστό ευστοχίας;

Όχι. Για τον λόγο που εξηγήθηκε στο προηγούμενο ερώτημα, θα υπήρχε miss μόνο κάθε 4η lw.


Ερώτηση 13
  Συγκρίνετε το ποσοστό ευστοχίας της νέας οργάνωσης, direct mapped, σε σχέση με το αντίστοιχο ποσοστό της fully associative του προηγούμενου πειράματος που είχε την ίδια χωρητικότητα.  Εξηγείστε τι συμβαίνει.

Για τον ίδιο λόγο με τις προηγούμενες ερωτήσεις το ποσοστό ευστοχίας θα παραμείνει το ίδιο και με την νέα οργάνωση. Η μόνη διαφορά είναι ότι πλέον τα blocks δεν αναζητούνται σειριακά, μέχρι να βρεθεί ή όχι το επιθυμητό block, αλλά άμεσα ανάλογα την διεύθυνση.


Ερώτηση 14
  Ποιό είναι το νέο μοτίβο και ποιό το ποσοστό ευστοχίας; Τι παρατηρείτε;

Με την αλλαγή του προγράμματος ο επεξεργαστής παράγει εναλλάξ μια διευθυνση του array, την διεύθυνση του counter (0x10010000),την επομένη διευθυνση του array (+4), ξανά την διεύθυνση του counter κτλ.
Το ποσοστό ευστοχίας πέφτει ελαφρώς στο 83% σε σχέση με το 88% του προηγούμενου παραδείγματος.
Αυτό οφείλεται στα συνεχόμενα misses των sw/lw όταν εγγραφονται/διαβάζονται εναλλάξ ο counter και τα στοιχεία 16-17-18-19 του array αντίστοιχα, οι διευθύνσεις των οποίων ανήκουν στο ίδιο set οπότε και αλληλοαντικαθίστανται συνεχώς στην cache.


Ερώτηση 15
  Ο Data Cache Simulator, δεν έχει επιλογές για πολιτικές εγγραφών (write policies).
  Από αυτά που παρατηρήσατε στο προηγούμενο πείραμα, μπορείτε να αποφανθείτε ότι είναι write allocate ή no write-allocate;

Η πολιτική που ακολουθεί ο data cache simulator είναι write-allocate. Μετά από κάθε αστοχία της sw του counter, αυτός εγγράφεται στην cache.

